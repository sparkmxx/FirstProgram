//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RedNoble.Starmao.Study.Configuration
{
    
    
    /// <summary>
    /// The RedNobleConfigSection Configuration Section.
    /// </summary>
    public partial class RedNobleConfigSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the RedNobleConfigSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string RedNobleConfigSectionSectionName = "redNobleConfigSection";
        
        /// <summary>
        /// Gets the RedNobleConfigSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::RedNoble.Starmao.Study.Configuration.RedNobleConfigSection Instance
        {
            get
            {
                return ((global::RedNoble.Starmao.Study.Configuration.RedNobleConfigSection)(global::System.Configuration.ConfigurationManager.GetSection(global::RedNoble.Starmao.Study.Configuration.RedNobleConfigSection.RedNobleConfigSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RedNoble.Starmao.Study.Configuration.RedNobleConfigSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::RedNoble.Starmao.Study.Configuration.RedNobleConfigSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Databases Property
        /// <summary>
        /// The XML name of the <see cref="Databases"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string DatabasesPropertyName = "databases";
        
        /// <summary>
        /// Gets or sets the Databases.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Databases.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RedNoble.Starmao.Study.Configuration.RedNobleConfigSection.DatabasesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::RedNoble.Starmao.Study.Configuration.DatabaseElementCollection Databases
        {
            get
            {
                return ((global::RedNoble.Starmao.Study.Configuration.DatabaseElementCollection)(base[global::RedNoble.Starmao.Study.Configuration.RedNobleConfigSection.DatabasesPropertyName]));
            }
            set
            {
                base[global::RedNoble.Starmao.Study.Configuration.RedNobleConfigSection.DatabasesPropertyName] = value;
            }
        }
        #endregion
        
        #region EmailClient Property
        /// <summary>
        /// The XML name of the <see cref="EmailClient"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string EmailClientPropertyName = "emailClient";
        
        /// <summary>
        /// Gets or sets the EmailClient.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The EmailClient.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RedNoble.Starmao.Study.Configuration.RedNobleConfigSection.EmailClientPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::RedNoble.Starmao.Study.Configuration.EmailClientElement EmailClient
        {
            get
            {
                return ((global::RedNoble.Starmao.Study.Configuration.EmailClientElement)(base[global::RedNoble.Starmao.Study.Configuration.RedNobleConfigSection.EmailClientPropertyName]));
            }
            set
            {
                base[global::RedNoble.Starmao.Study.Configuration.RedNobleConfigSection.EmailClientPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace RedNoble.Starmao.Study.Configuration
{
    
    
    /// <summary>
    /// A collection of DatabaseElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::RedNoble.Starmao.Study.Configuration.DatabaseElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::RedNoble.Starmao.Study.Configuration.DatabaseElementCollection.DatabaseElementPropertyName)]
    public partial class DatabaseElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string DatabaseElementPropertyName = "database";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::RedNoble.Starmao.Study.Configuration.DatabaseElementCollection.DatabaseElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::RedNoble.Starmao.Study.Configuration.DatabaseElementCollection.DatabaseElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::RedNoble.Starmao.Study.Configuration.DatabaseElement)(element)).Type;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::RedNoble.Starmao.Study.Configuration.DatabaseElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::RedNoble.Starmao.Study.Configuration.DatabaseElement this[int index]
        {
            get
            {
                return ((global::RedNoble.Starmao.Study.Configuration.DatabaseElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> with the specified key.
        /// </summary>
        /// <param name="type">The key of the <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::RedNoble.Starmao.Study.Configuration.DatabaseElement this[object type]
        {
            get
            {
                return ((global::RedNoble.Starmao.Study.Configuration.DatabaseElement)(base.BaseGet(type)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="database">The <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::RedNoble.Starmao.Study.Configuration.DatabaseElement database)
        {
            base.BaseAdd(database);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="database">The <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::RedNoble.Starmao.Study.Configuration.DatabaseElement database)
        {
            base.BaseRemove(this.GetElementKey(database));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::RedNoble.Starmao.Study.Configuration.DatabaseElement GetItemAt(int index)
        {
            return ((global::RedNoble.Starmao.Study.Configuration.DatabaseElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> with the specified key.
        /// </summary>
        /// <param name="type">The key of the <see cref="global::RedNoble.Starmao.Study.Configuration.DatabaseElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::RedNoble.Starmao.Study.Configuration.DatabaseElement GetItemByKey(string type)
        {
            return ((global::RedNoble.Starmao.Study.Configuration.DatabaseElement)(base.BaseGet(((object)(type)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace RedNoble.Starmao.Study.Configuration
{
    
    
    /// <summary>
    /// The DatabaseElement Configuration Element.
    /// </summary>
    public partial class DatabaseElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RedNoble.Starmao.Study.Configuration.DatabaseElement.TypePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::RedNoble.Starmao.Study.Configuration.DatabaseElement.TypePropertyName]));
            }
            set
            {
                base[global::RedNoble.Starmao.Study.Configuration.DatabaseElement.TypePropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RedNoble.Starmao.Study.Configuration.DatabaseElement.ValuePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int Value
        {
            get
            {
                return ((int)(base[global::RedNoble.Starmao.Study.Configuration.DatabaseElement.ValuePropertyName]));
            }
            set
            {
                base[global::RedNoble.Starmao.Study.Configuration.DatabaseElement.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace RedNoble.Starmao.Study.Configuration
{
    
    
    /// <summary>
    /// The EmailClientElement Configuration Element.
    /// </summary>
    public partial class EmailClientElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Host Property
        /// <summary>
        /// The XML name of the <see cref="Host"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HostPropertyName = "host";
        
        /// <summary>
        /// Gets or sets the Host.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Host.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RedNoble.Starmao.Study.Configuration.EmailClientElement.HostPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Host
        {
            get
            {
                return ((string)(base[global::RedNoble.Starmao.Study.Configuration.EmailClientElement.HostPropertyName]));
            }
            set
            {
                base[global::RedNoble.Starmao.Study.Configuration.EmailClientElement.HostPropertyName] = value;
            }
        }
        #endregion
        
        #region Port Property
        /// <summary>
        /// The XML name of the <see cref="Port"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PortPropertyName = "port";
        
        /// <summary>
        /// Gets or sets the Port.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Port.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RedNoble.Starmao.Study.Configuration.EmailClientElement.PortPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int Port
        {
            get
            {
                return ((int)(base[global::RedNoble.Starmao.Study.Configuration.EmailClientElement.PortPropertyName]));
            }
            set
            {
                base[global::RedNoble.Starmao.Study.Configuration.EmailClientElement.PortPropertyName] = value;
            }
        }
        #endregion
        
        #region UserName Property
        /// <summary>
        /// The XML name of the <see cref="UserName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string UserNamePropertyName = "userName";
        
        /// <summary>
        /// Gets or sets the UserName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The UserName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RedNoble.Starmao.Study.Configuration.EmailClientElement.UserNamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string UserName
        {
            get
            {
                return ((string)(base[global::RedNoble.Starmao.Study.Configuration.EmailClientElement.UserNamePropertyName]));
            }
            set
            {
                base[global::RedNoble.Starmao.Study.Configuration.EmailClientElement.UserNamePropertyName] = value;
            }
        }
        #endregion
        
        #region Password Property
        /// <summary>
        /// The XML name of the <see cref="Password"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PasswordPropertyName = "password";
        
        /// <summary>
        /// Gets or sets the Password.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Password.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RedNoble.Starmao.Study.Configuration.EmailClientElement.PasswordPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Password
        {
            get
            {
                return ((string)(base[global::RedNoble.Starmao.Study.Configuration.EmailClientElement.PasswordPropertyName]));
            }
            set
            {
                base[global::RedNoble.Starmao.Study.Configuration.EmailClientElement.PasswordPropertyName] = value;
            }
        }
        #endregion
        
        #region EnableSsl Property
        /// <summary>
        /// The XML name of the <see cref="EnableSsl"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string EnableSslPropertyName = "enableSsl";
        
        /// <summary>
        /// Gets or sets the EnableSsl.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The EnableSsl.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RedNoble.Starmao.Study.Configuration.EmailClientElement.EnableSslPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual bool EnableSsl
        {
            get
            {
                return ((bool)(base[global::RedNoble.Starmao.Study.Configuration.EmailClientElement.EnableSslPropertyName]));
            }
            set
            {
                base[global::RedNoble.Starmao.Study.Configuration.EmailClientElement.EnableSslPropertyName] = value;
            }
        }
        #endregion
        
        #region Sender Property
        /// <summary>
        /// The XML name of the <see cref="Sender"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SenderPropertyName = "sender";
        
        /// <summary>
        /// Gets or sets the Sender.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Sender.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RedNoble.Starmao.Study.Configuration.EmailClientElement.SenderPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Sender
        {
            get
            {
                return ((string)(base[global::RedNoble.Starmao.Study.Configuration.EmailClientElement.SenderPropertyName]));
            }
            set
            {
                base[global::RedNoble.Starmao.Study.Configuration.EmailClientElement.SenderPropertyName] = value;
            }
        }
        #endregion
    }
}
